name: Build

on: [pull_request, push, repository_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform:
           # ESP32S2
           - 'funhouse'
           - 'magtag'
           - 'metroesp32s2'
           # nRF52
           - 'cpb'
           - 'nrf52840'
           # RP2040
           - 'feather_rp2040_tinyusb'
           # SAMD
           - 'feather_m4_can_tinyusb'
           - 'metro_m0_tinyusb'
           - 'metro_m4_tinyusb'

    steps:
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Checkout adafruit/ci-arduino
      uses: actions/checkout@v3
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: Install Libraries for building examples
      run: arduino-cli lib install "Adafruit SPIFlash" "MIDI Library" "Adafruit seesaw Library" "Adafruit NeoPixel" "SdFat - Adafruit Fork" "SD" "Adafruit Circuit Playground" "Adafruit InternalFlash" "Pico PIO USB"

    - name: test platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}

  clang_and_doxy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Setup Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'  

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Checkout adafruit/ci-arduino
      uses: actions/checkout@v3
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: clang
      run: python3 ci/run-clang-format.py -r src/arduino

    - name: doxygen
      env:
        GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
        PRETTYNAME : "Adafruit TinyUSB Library"
      run: bash ci/doxy_gen_and_deploy.sh
