# SPDX-FileCopyrightText: Brent Rubell for Adafruit Industries, 2022
#
# SPDX-License-Identifier: MIT
name: WipperSnapper Build CI

on:
  pull_request:
  workflow_call:
    secrets:
      GH_REPO_TOKEN:
        required: true

jobs:
  build-esp32sx:
    name: Build WipperSnapper ESP32-Sx
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["funhouse", "magtag",
                           "metroesp32s2", "feather_esp32s2",
                           "feather_esp32s2_tft",
                           "feather_esp32s3", "feather_esp32s3_4mbflash_2mbpsram",
                           "feather_esp32s3_tft",
                           "qtpy_esp32s3", "qtpy_esp32s2"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: brentru/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/milesburton/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
        git clone --quiet https://github.com/PaulStoffregen/OneWire.git /home/runner/Arduino/libraries/OneWire
    - name: Build for ESP32-Sx
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: list
      run: |
            ls
            ls examples/*/build/
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.uf2 wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo.ino.bin wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.bin

  build-esp32:
    name: Build WipperSnapper ESP32, ESP32-C3
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["feather_esp32", "qtpy_esp32", "feather_esp32_v2", "qtpy_esp32c3"]
        include:
          - offset: "0x1000"
          - offset: "0x0"
            arduino-platform: "qtpy_esp32c3"
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
        repository: adafruit/ci-arduino
        path: ci
    - name: Checkout Board Definitions
      uses: actions/checkout@v2
      with:
        repository: adafruit/Wippersnapper_Boards
        path: ws-boards
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/milesburton/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
        git clone --quiet https://github.com/PaulStoffregen/OneWire.git /home/runner/Arduino/libraries/OneWire
    - name: Install Dependencies
      run: |
        pip3 install esptool
    - name: build ESP32 platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/Wippersnapper_demo/build/*/Wippersnapper_demo.ino.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.bin
            mv examples/Wippersnapper_demo/build/*/Wippersnapper_demo.ino.elf wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.elf
            mv examples/Wippersnapper_demo/build/*/Wippersnapper_demo.ino.map wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.map
            mv examples/Wippersnapper_demo/build/*/Wippersnapper_demo.ino.bootloader.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.bootloader.bin
            mv examples/Wippersnapper_demo/build/*/Wippersnapper_demo.ino.partitions.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.partitions.bin
    - name: Check boot_app0 file existence (esp32 built from core, not-source)
      id: check_files
      uses: andstor/file-existence-action@v1
      with:
        files: "/home/runner/.arduino15/packages/esp32/hardware/esp32/*/tools/partitions/boot_app0.bin"
    - name: boot_app0 file from arduino-cli core
      if: steps.check_files.outputs.files_exists == 'true'
      run: mv /home/runner/.arduino15/packages/esp32/hardware/esp32/*/tools/partitions/boot_app0.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.boot_app0.bin
    - name: boot_app0 file from esp32 source bsp
      if: steps.check_files.outputs.files_exists == 'false'
      run: mv /home/runner/Arduino/hardware/espressif/esp32/tools/partitions/boot_app0.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.boot_app0.bin
    - name: Get Board Flash Parameters
      id: get_board_json
      run: |
          board_name=${{ matrix.arduino-platform }}
          content=$(cat ws-boards/boards/${board_name//_/-}/definition.json)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=boardJson::$content"
    - name: Create combined binary using Esptool merge_bin
      run: |
          python3 -m esptool --chip ${{fromJson(steps.get_board_json.outputs.boardJson).esptool.chip}} merge_bin \
            --flash_mode ${{fromJson(steps.get_board_json.outputs.boardJson).esptool.flashMode}} \
            --flash_freq ${{fromJson(steps.get_board_json.outputs.boardJson).esptool.flashFreq}} \
            --flash_size ${{fromJson(steps.get_board_json.outputs.boardJson).esptool.flashSize}} \
            -o wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.combined.bin \
            ${{ matrix.offset }} wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.bootloader.bin \
            0x8000 wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.partitions.bin \
            0xe000 wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.boot_app0.bin \
            0x10000 wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.bin
    - name: Zip build artifacts
      run: |
            zip -r wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.zip wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.*
    - name: upload build artifacts zip
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.zip

  build-samd:
    name: Build WipperSnapper SAMD
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["pyportal_tinyusb", "metro_m4_airliftlite_tinyusb"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
      # manually install Adafruit WiFiNINA library fork
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/adafruit/WiFiNINA.git /home/runner/Arduino/libraries/WiFiNINA
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/milesburton/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
        git clone --quiet https://github.com/PaulStoffregen/OneWire.git /home/runner/Arduino/libraries/OneWire
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.uf2 wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            mv examples/*/build/*/Wippersnapper_demo.ino.hex wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.hex

  build-rp2040:
    name: Build WipperSnapper RP2040
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["rpi_pico_w"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: brentru/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
      # manually install OneWireNG/TempControlLib for OneWireNg (RP2040 Supported OneWire w/backwards compat.)
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/pstolarz/OneWireNg.git /home/runner/Arduino/libraries/OneWireNg
        git clone --quiet https://github.com/pstolarz/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.uf2 wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2
    - name: upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.${{ env.WS_VERSION }}.uf2


  # NOTE: This does NOT release artifacts, it only builds
  build-samd-non-fs:
    name: Build WipperSnapper SAMD (NO-TINYUSB)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["mkrwifi1010", "nano_33_iot"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino libraries
      run: |
        git clone --quiet https://github.com/arduino-libraries/WiFiNINA.git /home/runner/Arduino/libraries/WiFiNINA
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/arduino-libraries/Servo.git /home/runner/Arduino/libraries/Servo
        git clone --quiet https://github.com/milesburton/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
        git clone --quiet https://github.com/PaulStoffregen/OneWire.git /home/runner/Arduino/libraries/OneWire
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}

  build-esp8266:
    name: Build WipperSnapper ESP8266
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arduino-platform: ["feather_esp8266"]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2
    - name: Get WipperSnapper version
      run: |
        git fetch --prune --unshallow --tags
        git describe --dirty --tags
        echo >>$GITHUB_ENV WS_VERSION=$(git describe --dirty --tags)
    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci
    - name: Install CI-Arduino
      run: bash ci/actions_install.sh
    - name: Install extra Arduino library
      run: |
        git clone --quiet https://github.com/brentru/Adafruit_MQTT_Library.git /home/runner/Arduino/libraries/Adafruit_MQTT_Library
        git clone --quiet https://github.com/milesburton/Arduino-Temperature-Control-Library.git /home/runner/Arduino/libraries/Arduino-Temperature-Control-Library
        git clone --quiet https://github.com/PaulStoffregen/OneWire.git /home/runner/Arduino/libraries/OneWire
    - name: build platforms
      run: python3 ci/build_platform.py ${{ matrix.arduino-platform }}
    - name: list build artifacts
      run: |
            ls
            ls examples/*
    - name: Rename build artifacts to reflect the platform name
      run: |
            mv examples/*/build/*/Wippersnapper_demo.ino.bin wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.bin
            mv examples/*/build/*/Wippersnapper_demo.ino.elf wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.elf
            mv examples/*/build/*/Wippersnapper_demo.ino.map wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.map
    - name: Zip build artifacts
      run: |
            zip -r wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.zip wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.*
    - name: upload build artifacts zip
      uses: actions/upload-artifact@v2
      with:
        name: build-files
        path: |
            wippersnapper.${{ matrix.arduino-platform }}.littlefs.${{ env.WS_VERSION }}.zip


  clang_and_doxy:
    runs-on: ubuntu-latest
    needs: [build-samd, build-esp32, build-esp32sx, build-esp8266, build-samd-non-fs, build-rp2040]
    steps:
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - uses: actions/checkout@v2

    - uses: actions/checkout@v2
      with:
         repository: adafruit/ci-arduino
         path: ci

    - name: pre-install
      run: bash ci/actions_install.sh

    - name: clang
      run: python3 ci/run-clang-format.py -r -e "ci/*" -e "bin/*" -e src/nanopb -e src/wippersnapper -e src/pb.h -e src/provisioning/tinyusb  src/

    - name: doxygen
      env:
        GH_REPO_TOKEN: ${{ secrets.GH_REPO_TOKEN }}
        PRETTYNAME : "Adafruit.io WipperSnapper Library"
      run: bash ci/doxy_gen_and_deploy.sh
