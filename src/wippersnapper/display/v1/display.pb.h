/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5-dev at Thu Sep  4 19:40:01 2025. */

#ifndef PB_WIPPERSNAPPER_DISPLAY_V1_WIPPERSNAPPER_DISPLAY_V1_DISPLAY_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_DISPLAY_V1_WIPPERSNAPPER_DISPLAY_V1_DISPLAY_PB_H_INCLUDED
#include <pb.h>
#include "nanopb/nanopb.pb.h"
#include "wippersnapper/i2c/v1/i2c.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _wippersnapper_display_v1_DisplayType {
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_UNSPECIFIED = 0,
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_OLED = 1,
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_EPD = 2,
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT = 3
} wippersnapper_display_v1_DisplayType;

typedef enum _wippersnapper_display_v1_EPDMode {
    wippersnapper_display_v1_EPDMode_EPD_MODE_UNSPECIFIED = 0,
    wippersnapper_display_v1_EPDMode_EPD_MODE_GRAYSCALE4 = 1,
    wippersnapper_display_v1_EPDMode_EPD_MODE_MONO = 2
} wippersnapper_display_v1_EPDMode;

typedef enum _wippersnapper_display_v1_SSD1306TextSize {
    wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_UNSPECIFIED = 0,
    wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_1 = 1,
    wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_2 = 2
} wippersnapper_display_v1_SSD1306TextSize;

typedef enum _wippersnapper_display_v1_LEDBackpackAlignment {
    wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_UNSPECIFIED = 0,
    wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_LEFT = 1,
    wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_RIGHT = 2
} wippersnapper_display_v1_LEDBackpackAlignment;

/* Struct definitions */
typedef struct _wippersnapper_display_v1_CharLCDConfig {
    uint32_t rows;
    uint32_t columns;
} wippersnapper_display_v1_CharLCDConfig;

typedef struct _wippersnapper_display_v1_DisplayAddedorReplaced {
    char name[64];
    bool did_add;
} wippersnapper_display_v1_DisplayAddedorReplaced;

typedef struct _wippersnapper_display_v1_DisplayRemove {
    char name[64];
} wippersnapper_display_v1_DisplayRemove;

typedef struct _wippersnapper_display_v1_DisplayRemoved {
    char name[64];
    bool did_remove;
} wippersnapper_display_v1_DisplayRemoved;

typedef struct _wippersnapper_display_v1_EPDConfig {
    wippersnapper_display_v1_EPDMode mode;
} wippersnapper_display_v1_EPDConfig;

typedef struct _wippersnapper_display_v1_EPDWriteOptions {
    int32_t text_size;
} wippersnapper_display_v1_EPDWriteOptions;

typedef struct _wippersnapper_display_v1_I2cConfig {
    bool has_i2c;
    wippersnapper_i2c_v1_I2CDeviceInitRequest i2c;
} wippersnapper_display_v1_I2cConfig;

typedef struct _wippersnapper_display_v1_LEDBackpackConfig {
    int32_t brightness;
    wippersnapper_display_v1_LEDBackpackAlignment alignment;
} wippersnapper_display_v1_LEDBackpackConfig;

typedef struct _wippersnapper_display_v1_OledConfig {
    uint32_t width;
    uint32_t height;
    int32_t text_size;
} wippersnapper_display_v1_OledConfig;

typedef struct _wippersnapper_display_v1_SpiConfig {
    int32_t bus;
    char pin_dc[6];
    char pin_rst[6];
    char pin_cs[6];
    char pin_sram_cs[6];
    char pin_busy[6];
    char pin_mosi[6];
    char pin_sck[6];
    char pin_miso[6];
} wippersnapper_display_v1_SpiConfig;

typedef struct _wippersnapper_display_v1_TftConfig {
    int32_t width;
    int32_t height;
    int32_t rotation;
} wippersnapper_display_v1_TftConfig;

typedef struct _wippersnapper_display_v1_DisplayAddOrReplace {
    wippersnapper_display_v1_DisplayType type;
    char name[64];
    pb_size_t which_interface_type;
    union {
        wippersnapper_display_v1_SpiConfig cfg_spi;
        wippersnapper_display_v1_I2cConfig cfg_i2c;
    } interface_type;
    pb_size_t which_config;
    union {
        wippersnapper_display_v1_EPDConfig config_epd;
        wippersnapper_display_v1_TftConfig config_tft;
        wippersnapper_display_v1_OledConfig config_oled;
        wippersnapper_display_v1_LEDBackpackConfig config_led_backpack;
        wippersnapper_display_v1_CharLCDConfig config_char_lcd;
    } config;
} wippersnapper_display_v1_DisplayAddOrReplace;

typedef struct _wippersnapper_display_v1_DisplayWrite {
    char name[64];
    char message[1024];
    pb_size_t which_options;
    union {
        wippersnapper_display_v1_EPDWriteOptions epd_options;
    } options;
} wippersnapper_display_v1_DisplayWrite;


/* Helper constants for enums */
#define _wippersnapper_display_v1_DisplayType_MIN wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_UNSPECIFIED
#define _wippersnapper_display_v1_DisplayType_MAX wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT
#define _wippersnapper_display_v1_DisplayType_ARRAYSIZE ((wippersnapper_display_v1_DisplayType)(wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT+1))

#define _wippersnapper_display_v1_EPDMode_MIN wippersnapper_display_v1_EPDMode_EPD_MODE_UNSPECIFIED
#define _wippersnapper_display_v1_EPDMode_MAX wippersnapper_display_v1_EPDMode_EPD_MODE_MONO
#define _wippersnapper_display_v1_EPDMode_ARRAYSIZE ((wippersnapper_display_v1_EPDMode)(wippersnapper_display_v1_EPDMode_EPD_MODE_MONO+1))

#define _wippersnapper_display_v1_SSD1306TextSize_MIN wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_UNSPECIFIED
#define _wippersnapper_display_v1_SSD1306TextSize_MAX wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_2
#define _wippersnapper_display_v1_SSD1306TextSize_ARRAYSIZE ((wippersnapper_display_v1_SSD1306TextSize)(wippersnapper_display_v1_SSD1306TextSize_SSD1306_TEXT_SIZE_2+1))

#define _wippersnapper_display_v1_LEDBackpackAlignment_MIN wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_UNSPECIFIED
#define _wippersnapper_display_v1_LEDBackpackAlignment_MAX wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_RIGHT
#define _wippersnapper_display_v1_LEDBackpackAlignment_ARRAYSIZE ((wippersnapper_display_v1_LEDBackpackAlignment)(wippersnapper_display_v1_LEDBackpackAlignment_LED_BACKPACK_ALIGNMENT_RIGHT+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wippersnapper_display_v1_SpiConfig_init_default {0, "", "", "", "", "", "", "", ""}
#define wippersnapper_display_v1_EPDConfig_init_default {_wippersnapper_display_v1_EPDMode_MIN}
#define wippersnapper_display_v1_EPDWriteOptions_init_default {0}
#define wippersnapper_display_v1_TftConfig_init_default {0, 0, 0}
#define wippersnapper_display_v1_I2cConfig_init_default {false, wippersnapper_i2c_v1_I2CDeviceInitRequest_init_default}
#define wippersnapper_display_v1_OledConfig_init_default {0, 0, 0}
#define wippersnapper_display_v1_LEDBackpackConfig_init_default {0, _wippersnapper_display_v1_LEDBackpackAlignment_MIN}
#define wippersnapper_display_v1_CharLCDConfig_init_default {0, 0}
#define wippersnapper_display_v1_DisplayAddOrReplace_init_default {_wippersnapper_display_v1_DisplayType_MIN, "", 0, {wippersnapper_display_v1_SpiConfig_init_default}, 0, {wippersnapper_display_v1_EPDConfig_init_default}}
#define wippersnapper_display_v1_DisplayRemove_init_default {""}
#define wippersnapper_display_v1_DisplayWrite_init_default {"", "", 0, {wippersnapper_display_v1_EPDWriteOptions_init_default}}
#define wippersnapper_display_v1_DisplayAddedorReplaced_init_default {"", 0}
#define wippersnapper_display_v1_DisplayRemoved_init_default {"", 0}
#define wippersnapper_display_v1_SpiConfig_init_zero {0, "", "", "", "", "", "", "", ""}
#define wippersnapper_display_v1_EPDConfig_init_zero {_wippersnapper_display_v1_EPDMode_MIN}
#define wippersnapper_display_v1_EPDWriteOptions_init_zero {0}
#define wippersnapper_display_v1_TftConfig_init_zero {0, 0, 0}
#define wippersnapper_display_v1_I2cConfig_init_zero {false, wippersnapper_i2c_v1_I2CDeviceInitRequest_init_zero}
#define wippersnapper_display_v1_OledConfig_init_zero {0, 0, 0}
#define wippersnapper_display_v1_LEDBackpackConfig_init_zero {0, _wippersnapper_display_v1_LEDBackpackAlignment_MIN}
#define wippersnapper_display_v1_CharLCDConfig_init_zero {0, 0}
#define wippersnapper_display_v1_DisplayAddOrReplace_init_zero {_wippersnapper_display_v1_DisplayType_MIN, "", 0, {wippersnapper_display_v1_SpiConfig_init_zero}, 0, {wippersnapper_display_v1_EPDConfig_init_zero}}
#define wippersnapper_display_v1_DisplayRemove_init_zero {""}
#define wippersnapper_display_v1_DisplayWrite_init_zero {"", "", 0, {wippersnapper_display_v1_EPDWriteOptions_init_zero}}
#define wippersnapper_display_v1_DisplayAddedorReplaced_init_zero {"", 0}
#define wippersnapper_display_v1_DisplayRemoved_init_zero {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_display_v1_CharLCDConfig_rows_tag 1
#define wippersnapper_display_v1_CharLCDConfig_columns_tag 2
#define wippersnapper_display_v1_DisplayAddedorReplaced_name_tag 1
#define wippersnapper_display_v1_DisplayAddedorReplaced_did_add_tag 2
#define wippersnapper_display_v1_DisplayRemove_name_tag 1
#define wippersnapper_display_v1_DisplayRemoved_name_tag 1
#define wippersnapper_display_v1_DisplayRemoved_did_remove_tag 2
#define wippersnapper_display_v1_EPDConfig_mode_tag 1
#define wippersnapper_display_v1_EPDWriteOptions_text_size_tag 1
#define wippersnapper_display_v1_I2cConfig_i2c_tag 1
#define wippersnapper_display_v1_LEDBackpackConfig_brightness_tag 1
#define wippersnapper_display_v1_LEDBackpackConfig_alignment_tag 2
#define wippersnapper_display_v1_OledConfig_width_tag 1
#define wippersnapper_display_v1_OledConfig_height_tag 2
#define wippersnapper_display_v1_OledConfig_text_size_tag 3
#define wippersnapper_display_v1_SpiConfig_bus_tag 1
#define wippersnapper_display_v1_SpiConfig_pin_dc_tag 2
#define wippersnapper_display_v1_SpiConfig_pin_rst_tag 3
#define wippersnapper_display_v1_SpiConfig_pin_cs_tag 4
#define wippersnapper_display_v1_SpiConfig_pin_sram_cs_tag 5
#define wippersnapper_display_v1_SpiConfig_pin_busy_tag 6
#define wippersnapper_display_v1_SpiConfig_pin_mosi_tag 7
#define wippersnapper_display_v1_SpiConfig_pin_sck_tag 8
#define wippersnapper_display_v1_SpiConfig_pin_miso_tag 9
#define wippersnapper_display_v1_TftConfig_width_tag 1
#define wippersnapper_display_v1_TftConfig_height_tag 2
#define wippersnapper_display_v1_TftConfig_rotation_tag 3
#define wippersnapper_display_v1_DisplayAddOrReplace_type_tag 1
#define wippersnapper_display_v1_DisplayAddOrReplace_name_tag 2
#define wippersnapper_display_v1_DisplayAddOrReplace_cfg_spi_tag 3
#define wippersnapper_display_v1_DisplayAddOrReplace_cfg_i2c_tag 4
#define wippersnapper_display_v1_DisplayAddOrReplace_config_epd_tag 5
#define wippersnapper_display_v1_DisplayAddOrReplace_config_tft_tag 6
#define wippersnapper_display_v1_DisplayAddOrReplace_config_oled_tag 7
#define wippersnapper_display_v1_DisplayAddOrReplace_config_led_backpack_tag 8
#define wippersnapper_display_v1_DisplayAddOrReplace_config_char_lcd_tag 9
#define wippersnapper_display_v1_DisplayWrite_name_tag 1
#define wippersnapper_display_v1_DisplayWrite_message_tag 2
#define wippersnapper_display_v1_DisplayWrite_epd_options_tag 3

/* Struct field encoding specification for nanopb */
#define wippersnapper_display_v1_SpiConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    bus,               1) \
X(a, STATIC,   SINGULAR, STRING,   pin_dc,            2) \
X(a, STATIC,   SINGULAR, STRING,   pin_rst,           3) \
X(a, STATIC,   SINGULAR, STRING,   pin_cs,            4) \
X(a, STATIC,   SINGULAR, STRING,   pin_sram_cs,       5) \
X(a, STATIC,   SINGULAR, STRING,   pin_busy,          6) \
X(a, STATIC,   SINGULAR, STRING,   pin_mosi,          7) \
X(a, STATIC,   SINGULAR, STRING,   pin_sck,           8) \
X(a, STATIC,   SINGULAR, STRING,   pin_miso,          9)
#define wippersnapper_display_v1_SpiConfig_CALLBACK NULL
#define wippersnapper_display_v1_SpiConfig_DEFAULT NULL

#define wippersnapper_display_v1_EPDConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    mode,              1)
#define wippersnapper_display_v1_EPDConfig_CALLBACK NULL
#define wippersnapper_display_v1_EPDConfig_DEFAULT NULL

#define wippersnapper_display_v1_EPDWriteOptions_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    text_size,         1)
#define wippersnapper_display_v1_EPDWriteOptions_CALLBACK NULL
#define wippersnapper_display_v1_EPDWriteOptions_DEFAULT NULL

#define wippersnapper_display_v1_TftConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    width,             1) \
X(a, STATIC,   SINGULAR, INT32,    height,            2) \
X(a, STATIC,   SINGULAR, INT32,    rotation,          3)
#define wippersnapper_display_v1_TftConfig_CALLBACK NULL
#define wippersnapper_display_v1_TftConfig_DEFAULT NULL

#define wippersnapper_display_v1_I2cConfig_FIELDLIST(X, a) \
X(a, STATIC,   OPTIONAL, MESSAGE,  i2c,               1)
#define wippersnapper_display_v1_I2cConfig_CALLBACK NULL
#define wippersnapper_display_v1_I2cConfig_DEFAULT NULL
#define wippersnapper_display_v1_I2cConfig_i2c_MSGTYPE wippersnapper_i2c_v1_I2CDeviceInitRequest

#define wippersnapper_display_v1_OledConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   width,             1) \
X(a, STATIC,   SINGULAR, UINT32,   height,            2) \
X(a, STATIC,   SINGULAR, INT32,    text_size,         3)
#define wippersnapper_display_v1_OledConfig_CALLBACK NULL
#define wippersnapper_display_v1_OledConfig_DEFAULT NULL

#define wippersnapper_display_v1_LEDBackpackConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    brightness,        1) \
X(a, STATIC,   SINGULAR, UENUM,    alignment,         2)
#define wippersnapper_display_v1_LEDBackpackConfig_CALLBACK NULL
#define wippersnapper_display_v1_LEDBackpackConfig_DEFAULT NULL

#define wippersnapper_display_v1_CharLCDConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UINT32,   rows,              1) \
X(a, STATIC,   SINGULAR, UINT32,   columns,           2)
#define wippersnapper_display_v1_CharLCDConfig_CALLBACK NULL
#define wippersnapper_display_v1_CharLCDConfig_DEFAULT NULL

#define wippersnapper_display_v1_DisplayAddOrReplace_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, STRING,   name,              2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (interface_type,cfg_spi,interface_type.cfg_spi),   3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (interface_type,cfg_i2c,interface_type.cfg_i2c),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_epd,config.config_epd),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_tft,config.config_tft),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_oled,config.config_oled),   7) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_led_backpack,config.config_led_backpack),   8) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_char_lcd,config.config_char_lcd),   9)
#define wippersnapper_display_v1_DisplayAddOrReplace_CALLBACK NULL
#define wippersnapper_display_v1_DisplayAddOrReplace_DEFAULT NULL
#define wippersnapper_display_v1_DisplayAddOrReplace_interface_type_cfg_spi_MSGTYPE wippersnapper_display_v1_SpiConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_interface_type_cfg_i2c_MSGTYPE wippersnapper_display_v1_I2cConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_epd_MSGTYPE wippersnapper_display_v1_EPDConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_tft_MSGTYPE wippersnapper_display_v1_TftConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_oled_MSGTYPE wippersnapper_display_v1_OledConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_led_backpack_MSGTYPE wippersnapper_display_v1_LEDBackpackConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_char_lcd_MSGTYPE wippersnapper_display_v1_CharLCDConfig

#define wippersnapper_display_v1_DisplayRemove_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1)
#define wippersnapper_display_v1_DisplayRemove_CALLBACK NULL
#define wippersnapper_display_v1_DisplayRemove_DEFAULT NULL

#define wippersnapper_display_v1_DisplayWrite_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, STRING,   message,           2) \
X(a, STATIC,   ONEOF,    MESSAGE,  (options,epd_options,options.epd_options),   3)
#define wippersnapper_display_v1_DisplayWrite_CALLBACK NULL
#define wippersnapper_display_v1_DisplayWrite_DEFAULT NULL
#define wippersnapper_display_v1_DisplayWrite_options_epd_options_MSGTYPE wippersnapper_display_v1_EPDWriteOptions

#define wippersnapper_display_v1_DisplayAddedorReplaced_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, BOOL,     did_add,           2)
#define wippersnapper_display_v1_DisplayAddedorReplaced_CALLBACK NULL
#define wippersnapper_display_v1_DisplayAddedorReplaced_DEFAULT NULL

#define wippersnapper_display_v1_DisplayRemoved_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, BOOL,     did_remove,        2)
#define wippersnapper_display_v1_DisplayRemoved_CALLBACK NULL
#define wippersnapper_display_v1_DisplayRemoved_DEFAULT NULL

extern const pb_msgdesc_t wippersnapper_display_v1_SpiConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_EPDConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_EPDWriteOptions_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_TftConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_I2cConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_OledConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_LEDBackpackConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_CharLCDConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayAddOrReplace_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayRemove_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayWrite_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayAddedorReplaced_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayRemoved_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_display_v1_SpiConfig_fields &wippersnapper_display_v1_SpiConfig_msg
#define wippersnapper_display_v1_EPDConfig_fields &wippersnapper_display_v1_EPDConfig_msg
#define wippersnapper_display_v1_EPDWriteOptions_fields &wippersnapper_display_v1_EPDWriteOptions_msg
#define wippersnapper_display_v1_TftConfig_fields &wippersnapper_display_v1_TftConfig_msg
#define wippersnapper_display_v1_I2cConfig_fields &wippersnapper_display_v1_I2cConfig_msg
#define wippersnapper_display_v1_OledConfig_fields &wippersnapper_display_v1_OledConfig_msg
#define wippersnapper_display_v1_LEDBackpackConfig_fields &wippersnapper_display_v1_LEDBackpackConfig_msg
#define wippersnapper_display_v1_CharLCDConfig_fields &wippersnapper_display_v1_CharLCDConfig_msg
#define wippersnapper_display_v1_DisplayAddOrReplace_fields &wippersnapper_display_v1_DisplayAddOrReplace_msg
#define wippersnapper_display_v1_DisplayRemove_fields &wippersnapper_display_v1_DisplayRemove_msg
#define wippersnapper_display_v1_DisplayWrite_fields &wippersnapper_display_v1_DisplayWrite_msg
#define wippersnapper_display_v1_DisplayAddedorReplaced_fields &wippersnapper_display_v1_DisplayAddedorReplaced_msg
#define wippersnapper_display_v1_DisplayRemoved_fields &wippersnapper_display_v1_DisplayRemoved_msg

/* Maximum encoded size of messages (where known) */
#define wippersnapper_display_v1_SpiConfig_size  67
#define wippersnapper_display_v1_EPDConfig_size  2
#define wippersnapper_display_v1_EPDWriteOptions_size 11
#define wippersnapper_display_v1_TftConfig_size  33
#define wippersnapper_display_v1_I2cConfig_size  469
#define wippersnapper_display_v1_OledConfig_size 23
#define wippersnapper_display_v1_LEDBackpackConfig_size 13
#define wippersnapper_display_v1_CharLCDConfig_size 12
#define wippersnapper_display_v1_DisplayAddOrReplace_size 574
#define wippersnapper_display_v1_DisplayRemove_size 65
#define wippersnapper_display_v1_DisplayWrite_size 1104
#define wippersnapper_display_v1_DisplayAddedorReplaced_size 67
#define wippersnapper_display_v1_DisplayRemoved_size 67

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
