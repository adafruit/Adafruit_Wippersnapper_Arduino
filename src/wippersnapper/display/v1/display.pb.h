/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.5-dev at Wed Sep 10 20:43:29 2025. */

#ifndef PB_WIPPERSNAPPER_DISPLAY_V1_WIPPERSNAPPER_DISPLAY_V1_DISPLAY_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_DISPLAY_V1_WIPPERSNAPPER_DISPLAY_V1_DISPLAY_PB_H_INCLUDED
#include <pb.h>
#include "nanopb/nanopb.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _wippersnapper_display_v1_DisplayType {
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_UNSPECIFIED = 0,
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_EPD = 1,
    wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT = 2
} wippersnapper_display_v1_DisplayType;

typedef enum _wippersnapper_display_v1_EPDMode {
    wippersnapper_display_v1_EPDMode_EPD_MODE_UNSPECIFIED = 0,
    wippersnapper_display_v1_EPDMode_EPD_MODE_GRAYSCALE4 = 1,
    wippersnapper_display_v1_EPDMode_EPD_MODE_MONO = 2
} wippersnapper_display_v1_EPDMode;

typedef enum _wippersnapper_display_v1_DisplayDriver {
    wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_UNSPECIFIED = 0,
    wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_EPD_SSD1680 = 1,
    wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_EPD_ILI0373 = 2,
    wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_TFT_ST7789 = 3
} wippersnapper_display_v1_DisplayDriver;

/* Struct definitions */
typedef struct _wippersnapper_display_v1_DisplayAddedOrReplaced {
    char name[64];
    bool did_add;
} wippersnapper_display_v1_DisplayAddedOrReplaced;

typedef struct _wippersnapper_display_v1_DisplayRemove {
    char name[64];
} wippersnapper_display_v1_DisplayRemove;

typedef struct _wippersnapper_display_v1_DisplayRemoved {
    char name[64];
    bool did_remove;
} wippersnapper_display_v1_DisplayRemoved;

typedef struct _wippersnapper_display_v1_DisplayWrite {
    char name[64];
    char message[1024];
} wippersnapper_display_v1_DisplayWrite;

typedef struct _wippersnapper_display_v1_EPDWriteOptions {
    int32_t text_size;
} wippersnapper_display_v1_EPDWriteOptions;

typedef struct _wippersnapper_display_v1_EpdSpiConfig {
    int32_t bus;
    char pin_dc[6];
    char pin_rst[6];
    char pin_cs[6];
    char pin_sram_cs[6];
    char pin_busy[6];
} wippersnapper_display_v1_EpdSpiConfig;

typedef struct _wippersnapper_display_v1_TftConfig {
    int32_t width;
    int32_t height;
    int32_t rotation;
} wippersnapper_display_v1_TftConfig;

typedef struct _wippersnapper_display_v1_TftSpiConfig {
    int32_t bus;
    char pin_cs[6];
    char pin_dc[6];
    char pin_mosi[6];
    char pin_sck[6];
    char pin_rst[6];
    char pin_miso[6];
} wippersnapper_display_v1_TftSpiConfig;

typedef struct _wippersnapper_display_v1_EPDConfig {
    wippersnapper_display_v1_EPDMode mode;
    bool has_options;
    wippersnapper_display_v1_EPDWriteOptions options;
    int32_t width;
    int32_t height;
} wippersnapper_display_v1_EPDConfig;

typedef struct _wippersnapper_display_v1_DisplayAddOrReplace {
    wippersnapper_display_v1_DisplayType type;
    wippersnapper_display_v1_DisplayDriver driver;
    char name[64];
    pb_size_t which_interface_type;
    union {
        wippersnapper_display_v1_EpdSpiConfig spi_epd;
        wippersnapper_display_v1_TftSpiConfig spi_tft;
    } interface_type;
    pb_size_t which_config;
    union {
        wippersnapper_display_v1_EPDConfig config_epd;
        wippersnapper_display_v1_TftConfig config_tft;
    } config;
} wippersnapper_display_v1_DisplayAddOrReplace;


/* Helper constants for enums */
#define _wippersnapper_display_v1_DisplayType_MIN wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_UNSPECIFIED
#define _wippersnapper_display_v1_DisplayType_MAX wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT
#define _wippersnapper_display_v1_DisplayType_ARRAYSIZE ((wippersnapper_display_v1_DisplayType)(wippersnapper_display_v1_DisplayType_DISPLAY_TYPE_TFT+1))

#define _wippersnapper_display_v1_EPDMode_MIN wippersnapper_display_v1_EPDMode_EPD_MODE_UNSPECIFIED
#define _wippersnapper_display_v1_EPDMode_MAX wippersnapper_display_v1_EPDMode_EPD_MODE_MONO
#define _wippersnapper_display_v1_EPDMode_ARRAYSIZE ((wippersnapper_display_v1_EPDMode)(wippersnapper_display_v1_EPDMode_EPD_MODE_MONO+1))

#define _wippersnapper_display_v1_DisplayDriver_MIN wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_UNSPECIFIED
#define _wippersnapper_display_v1_DisplayDriver_MAX wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_TFT_ST7789
#define _wippersnapper_display_v1_DisplayDriver_ARRAYSIZE ((wippersnapper_display_v1_DisplayDriver)(wippersnapper_display_v1_DisplayDriver_DISPLAY_DRIVER_TFT_ST7789+1))


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wippersnapper_display_v1_EpdSpiConfig_init_default {0, "", "", "", "", ""}
#define wippersnapper_display_v1_EPDWriteOptions_init_default {0}
#define wippersnapper_display_v1_EPDConfig_init_default {_wippersnapper_display_v1_EPDMode_MIN, false, wippersnapper_display_v1_EPDWriteOptions_init_default, 0, 0}
#define wippersnapper_display_v1_TftSpiConfig_init_default {0, "", "", "", "", "", ""}
#define wippersnapper_display_v1_TftConfig_init_default {0, 0, 0}
#define wippersnapper_display_v1_DisplayAddOrReplace_init_default {_wippersnapper_display_v1_DisplayType_MIN, _wippersnapper_display_v1_DisplayDriver_MIN, "", 0, {wippersnapper_display_v1_EpdSpiConfig_init_default}, 0, {wippersnapper_display_v1_EPDConfig_init_default}}
#define wippersnapper_display_v1_DisplayRemove_init_default {""}
#define wippersnapper_display_v1_DisplayWrite_init_default {"", ""}
#define wippersnapper_display_v1_DisplayAddedOrReplaced_init_default {"", 0}
#define wippersnapper_display_v1_DisplayRemoved_init_default {"", 0}
#define wippersnapper_display_v1_EpdSpiConfig_init_zero {0, "", "", "", "", ""}
#define wippersnapper_display_v1_EPDWriteOptions_init_zero {0}
#define wippersnapper_display_v1_EPDConfig_init_zero {_wippersnapper_display_v1_EPDMode_MIN, false, wippersnapper_display_v1_EPDWriteOptions_init_zero, 0, 0}
#define wippersnapper_display_v1_TftSpiConfig_init_zero {0, "", "", "", "", "", ""}
#define wippersnapper_display_v1_TftConfig_init_zero {0, 0, 0}
#define wippersnapper_display_v1_DisplayAddOrReplace_init_zero {_wippersnapper_display_v1_DisplayType_MIN, _wippersnapper_display_v1_DisplayDriver_MIN, "", 0, {wippersnapper_display_v1_EpdSpiConfig_init_zero}, 0, {wippersnapper_display_v1_EPDConfig_init_zero}}
#define wippersnapper_display_v1_DisplayRemove_init_zero {""}
#define wippersnapper_display_v1_DisplayWrite_init_zero {"", ""}
#define wippersnapper_display_v1_DisplayAddedOrReplaced_init_zero {"", 0}
#define wippersnapper_display_v1_DisplayRemoved_init_zero {"", 0}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_display_v1_DisplayAddedOrReplaced_name_tag 1
#define wippersnapper_display_v1_DisplayAddedOrReplaced_did_add_tag 2
#define wippersnapper_display_v1_DisplayRemove_name_tag 1
#define wippersnapper_display_v1_DisplayRemoved_name_tag 1
#define wippersnapper_display_v1_DisplayRemoved_did_remove_tag 2
#define wippersnapper_display_v1_DisplayWrite_name_tag 1
#define wippersnapper_display_v1_DisplayWrite_message_tag 2
#define wippersnapper_display_v1_EPDWriteOptions_text_size_tag 1
#define wippersnapper_display_v1_EpdSpiConfig_bus_tag 1
#define wippersnapper_display_v1_EpdSpiConfig_pin_dc_tag 2
#define wippersnapper_display_v1_EpdSpiConfig_pin_rst_tag 3
#define wippersnapper_display_v1_EpdSpiConfig_pin_cs_tag 4
#define wippersnapper_display_v1_EpdSpiConfig_pin_sram_cs_tag 5
#define wippersnapper_display_v1_EpdSpiConfig_pin_busy_tag 6
#define wippersnapper_display_v1_TftConfig_width_tag 1
#define wippersnapper_display_v1_TftConfig_height_tag 2
#define wippersnapper_display_v1_TftConfig_rotation_tag 3
#define wippersnapper_display_v1_TftSpiConfig_bus_tag 1
#define wippersnapper_display_v1_TftSpiConfig_pin_cs_tag 2
#define wippersnapper_display_v1_TftSpiConfig_pin_dc_tag 3
#define wippersnapper_display_v1_TftSpiConfig_pin_mosi_tag 4
#define wippersnapper_display_v1_TftSpiConfig_pin_sck_tag 5
#define wippersnapper_display_v1_TftSpiConfig_pin_rst_tag 6
#define wippersnapper_display_v1_TftSpiConfig_pin_miso_tag 7
#define wippersnapper_display_v1_EPDConfig_mode_tag 1
#define wippersnapper_display_v1_EPDConfig_options_tag 2
#define wippersnapper_display_v1_EPDConfig_width_tag 3
#define wippersnapper_display_v1_EPDConfig_height_tag 4
#define wippersnapper_display_v1_DisplayAddOrReplace_type_tag 1
#define wippersnapper_display_v1_DisplayAddOrReplace_driver_tag 2
#define wippersnapper_display_v1_DisplayAddOrReplace_name_tag 3
#define wippersnapper_display_v1_DisplayAddOrReplace_spi_epd_tag 4
#define wippersnapper_display_v1_DisplayAddOrReplace_spi_tft_tag 5
#define wippersnapper_display_v1_DisplayAddOrReplace_config_epd_tag 6
#define wippersnapper_display_v1_DisplayAddOrReplace_config_tft_tag 7

/* Struct field encoding specification for nanopb */
#define wippersnapper_display_v1_EpdSpiConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    bus,               1) \
X(a, STATIC,   SINGULAR, STRING,   pin_dc,            2) \
X(a, STATIC,   SINGULAR, STRING,   pin_rst,           3) \
X(a, STATIC,   SINGULAR, STRING,   pin_cs,            4) \
X(a, STATIC,   SINGULAR, STRING,   pin_sram_cs,       5) \
X(a, STATIC,   SINGULAR, STRING,   pin_busy,          6)
#define wippersnapper_display_v1_EpdSpiConfig_CALLBACK NULL
#define wippersnapper_display_v1_EpdSpiConfig_DEFAULT NULL

#define wippersnapper_display_v1_EPDWriteOptions_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    text_size,         1)
#define wippersnapper_display_v1_EPDWriteOptions_CALLBACK NULL
#define wippersnapper_display_v1_EPDWriteOptions_DEFAULT NULL

#define wippersnapper_display_v1_EPDConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    mode,              1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  options,           2) \
X(a, STATIC,   SINGULAR, INT32,    width,             3) \
X(a, STATIC,   SINGULAR, INT32,    height,            4)
#define wippersnapper_display_v1_EPDConfig_CALLBACK NULL
#define wippersnapper_display_v1_EPDConfig_DEFAULT NULL
#define wippersnapper_display_v1_EPDConfig_options_MSGTYPE wippersnapper_display_v1_EPDWriteOptions

#define wippersnapper_display_v1_TftSpiConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    bus,               1) \
X(a, STATIC,   SINGULAR, STRING,   pin_cs,            2) \
X(a, STATIC,   SINGULAR, STRING,   pin_dc,            3) \
X(a, STATIC,   SINGULAR, STRING,   pin_mosi,          4) \
X(a, STATIC,   SINGULAR, STRING,   pin_sck,           5) \
X(a, STATIC,   SINGULAR, STRING,   pin_rst,           6) \
X(a, STATIC,   SINGULAR, STRING,   pin_miso,          7)
#define wippersnapper_display_v1_TftSpiConfig_CALLBACK NULL
#define wippersnapper_display_v1_TftSpiConfig_DEFAULT NULL

#define wippersnapper_display_v1_TftConfig_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, INT32,    width,             1) \
X(a, STATIC,   SINGULAR, INT32,    height,            2) \
X(a, STATIC,   SINGULAR, INT32,    rotation,          3)
#define wippersnapper_display_v1_TftConfig_CALLBACK NULL
#define wippersnapper_display_v1_TftConfig_DEFAULT NULL

#define wippersnapper_display_v1_DisplayAddOrReplace_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UENUM,    driver,            2) \
X(a, STATIC,   SINGULAR, STRING,   name,              3) \
X(a, STATIC,   ONEOF,    MESSAGE,  (interface_type,spi_epd,interface_type.spi_epd),   4) \
X(a, STATIC,   ONEOF,    MESSAGE,  (interface_type,spi_tft,interface_type.spi_tft),   5) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_epd,config.config_epd),   6) \
X(a, STATIC,   ONEOF,    MESSAGE,  (config,config_tft,config.config_tft),   7)
#define wippersnapper_display_v1_DisplayAddOrReplace_CALLBACK NULL
#define wippersnapper_display_v1_DisplayAddOrReplace_DEFAULT NULL
#define wippersnapper_display_v1_DisplayAddOrReplace_interface_type_spi_epd_MSGTYPE wippersnapper_display_v1_EpdSpiConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_interface_type_spi_tft_MSGTYPE wippersnapper_display_v1_TftSpiConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_epd_MSGTYPE wippersnapper_display_v1_EPDConfig
#define wippersnapper_display_v1_DisplayAddOrReplace_config_config_tft_MSGTYPE wippersnapper_display_v1_TftConfig

#define wippersnapper_display_v1_DisplayRemove_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1)
#define wippersnapper_display_v1_DisplayRemove_CALLBACK NULL
#define wippersnapper_display_v1_DisplayRemove_DEFAULT NULL

#define wippersnapper_display_v1_DisplayWrite_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, STRING,   message,           2)
#define wippersnapper_display_v1_DisplayWrite_CALLBACK NULL
#define wippersnapper_display_v1_DisplayWrite_DEFAULT NULL

#define wippersnapper_display_v1_DisplayAddedOrReplaced_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, BOOL,     did_add,           2)
#define wippersnapper_display_v1_DisplayAddedOrReplaced_CALLBACK NULL
#define wippersnapper_display_v1_DisplayAddedOrReplaced_DEFAULT NULL

#define wippersnapper_display_v1_DisplayRemoved_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   name,              1) \
X(a, STATIC,   SINGULAR, BOOL,     did_remove,        2)
#define wippersnapper_display_v1_DisplayRemoved_CALLBACK NULL
#define wippersnapper_display_v1_DisplayRemoved_DEFAULT NULL

extern const pb_msgdesc_t wippersnapper_display_v1_EpdSpiConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_EPDWriteOptions_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_EPDConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_TftSpiConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_TftConfig_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayAddOrReplace_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayRemove_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayWrite_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayAddedOrReplaced_msg;
extern const pb_msgdesc_t wippersnapper_display_v1_DisplayRemoved_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_display_v1_EpdSpiConfig_fields &wippersnapper_display_v1_EpdSpiConfig_msg
#define wippersnapper_display_v1_EPDWriteOptions_fields &wippersnapper_display_v1_EPDWriteOptions_msg
#define wippersnapper_display_v1_EPDConfig_fields &wippersnapper_display_v1_EPDConfig_msg
#define wippersnapper_display_v1_TftSpiConfig_fields &wippersnapper_display_v1_TftSpiConfig_msg
#define wippersnapper_display_v1_TftConfig_fields &wippersnapper_display_v1_TftConfig_msg
#define wippersnapper_display_v1_DisplayAddOrReplace_fields &wippersnapper_display_v1_DisplayAddOrReplace_msg
#define wippersnapper_display_v1_DisplayRemove_fields &wippersnapper_display_v1_DisplayRemove_msg
#define wippersnapper_display_v1_DisplayWrite_fields &wippersnapper_display_v1_DisplayWrite_msg
#define wippersnapper_display_v1_DisplayAddedOrReplaced_fields &wippersnapper_display_v1_DisplayAddedOrReplaced_msg
#define wippersnapper_display_v1_DisplayRemoved_fields &wippersnapper_display_v1_DisplayRemoved_msg

/* Maximum encoded size of messages (where known) */
#define wippersnapper_display_v1_EpdSpiConfig_size 46
#define wippersnapper_display_v1_EPDWriteOptions_size 11
#define wippersnapper_display_v1_EPDConfig_size  37
#define wippersnapper_display_v1_TftSpiConfig_size 53
#define wippersnapper_display_v1_TftConfig_size  33
#define wippersnapper_display_v1_DisplayAddOrReplace_size 163
#define wippersnapper_display_v1_DisplayRemove_size 65
#define wippersnapper_display_v1_DisplayWrite_size 1091
#define wippersnapper_display_v1_DisplayAddedOrReplaced_size 67
#define wippersnapper_display_v1_DisplayRemoved_size 67

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
