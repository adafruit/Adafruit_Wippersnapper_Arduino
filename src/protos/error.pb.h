/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_WIPPERSNAPPER_ERROR_ERROR_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_ERROR_ERROR_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _wippersnapper_error_Error {
    pb_size_t which_payload;
    union {
        int32_t ban_time; /* Account ban time, in seconds */
        int32_t throttle_time; /* Account time, in seconds */
    } payload;
} wippersnapper_error_Error;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wippersnapper_error_Error_init_default   {0, {0}}
#define wippersnapper_error_Error_init_zero      {0, {0}}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_error_Error_ban_time_tag   1
#define wippersnapper_error_Error_throttle_time_tag 2

/* Struct field encoding specification for nanopb */
#define wippersnapper_error_Error_FIELDLIST(X, a) \
X(a, STATIC,   ONEOF,    INT32,    (payload,ban_time,payload.ban_time),   1) \
X(a, STATIC,   ONEOF,    INT32,    (payload,throttle_time,payload.throttle_time),   2)
#define wippersnapper_error_Error_CALLBACK NULL
#define wippersnapper_error_Error_DEFAULT NULL

extern const pb_msgdesc_t wippersnapper_error_Error_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_error_Error_fields &wippersnapper_error_Error_msg

/* Maximum encoded size of messages (where known) */
#define WIPPERSNAPPER_ERROR_ERROR_PB_H_MAX_SIZE  wippersnapper_error_Error_size
#define wippersnapper_error_Error_size           11

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
