/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_WIPPERSNAPPER_DS18X20_DS18X20_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_DS18X20_DS18X20_PB_H_INCLUDED
#include <pb.h>
#include "sensor.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* *
 Ds18x20Add represents a  to initialize
 a DS18X20 Maxim temperature sensor, from the broker.
 NOTE: This API currently only supports ONE device per OneWire bus. */
typedef struct _wippersnapper_ds18x20_Ds18x20Add {
    char onewire_pin[5]; /* * The desired pin to use as a OneWire bus. */
    int32_t sensor_resolution; /* * The desired sensor resolution (9, 10, 11, or 12 bits). */
    float period; /* * The desired period to read the sensor, in seconds. */
    pb_size_t sensor_types_count;
    wippersnapper_sensor_SensorType sensor_types[2]; /* * SI types used by the DS18x20 sensor. */
} wippersnapper_ds18x20_Ds18x20Add;

/* *
 Ds18x20AddDs18x20AddedResponse represents a device's response
 to a Ds18x20Add message. */
typedef struct _wippersnapper_ds18x20_Ds18x20Added {
    bool is_initialized; /* * True if the 1-wire bus has been initialized successfully, False otherwise. */
    char onewire_pin[5]; /* * The pin being used as a OneWire bus. */
} wippersnapper_ds18x20_Ds18x20Added;

/* *
 Ds18x20Remove represents a  to de-initialize a DS18X20
 Maxim temperature sensor, from the broker. */
typedef struct _wippersnapper_ds18x20_Ds18x20Remove {
    char onewire_pin[5]; /* * The desired onewire bus to de-initialize a DS18x sensor on and release. */
} wippersnapper_ds18x20_Ds18x20Remove;

/* *
 Ds18x20Event event represents data from **one** DS18X20 sensor. */
typedef struct _wippersnapper_ds18x20_Ds18x20Event {
    char onewire_pin[5]; /* * The desired pin to use as a OneWire bus. */
    pb_size_t sensor_events_count;
    wippersnapper_sensor_SensorEvent sensor_events[2]; /* * The DS18X20's SensorEvent. */
} wippersnapper_ds18x20_Ds18x20Event;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wippersnapper_ds18x20_Ds18x20Add_init_default {"", 0, 0, 0, {_wippersnapper_sensor_SensorType_MIN, _wippersnapper_sensor_SensorType_MIN}}
#define wippersnapper_ds18x20_Ds18x20Added_init_default {0, ""}
#define wippersnapper_ds18x20_Ds18x20Remove_init_default {""}
#define wippersnapper_ds18x20_Ds18x20Event_init_default {"", 0, {wippersnapper_sensor_SensorEvent_init_default, wippersnapper_sensor_SensorEvent_init_default}}
#define wippersnapper_ds18x20_Ds18x20Add_init_zero {"", 0, 0, 0, {_wippersnapper_sensor_SensorType_MIN, _wippersnapper_sensor_SensorType_MIN}}
#define wippersnapper_ds18x20_Ds18x20Added_init_zero {0, ""}
#define wippersnapper_ds18x20_Ds18x20Remove_init_zero {""}
#define wippersnapper_ds18x20_Ds18x20Event_init_zero {"", 0, {wippersnapper_sensor_SensorEvent_init_zero, wippersnapper_sensor_SensorEvent_init_zero}}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_ds18x20_Ds18x20Add_onewire_pin_tag 1
#define wippersnapper_ds18x20_Ds18x20Add_sensor_resolution_tag 2
#define wippersnapper_ds18x20_Ds18x20Add_period_tag 3
#define wippersnapper_ds18x20_Ds18x20Add_sensor_types_tag 4
#define wippersnapper_ds18x20_Ds18x20Added_is_initialized_tag 1
#define wippersnapper_ds18x20_Ds18x20Added_onewire_pin_tag 2
#define wippersnapper_ds18x20_Ds18x20Remove_onewire_pin_tag 1
#define wippersnapper_ds18x20_Ds18x20Event_onewire_pin_tag 1
#define wippersnapper_ds18x20_Ds18x20Event_sensor_events_tag 2

/* Struct field encoding specification for nanopb */
#define wippersnapper_ds18x20_Ds18x20Add_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   onewire_pin,       1) \
X(a, STATIC,   SINGULAR, INT32,    sensor_resolution,   2) \
X(a, STATIC,   SINGULAR, FLOAT,    period,            3) \
X(a, STATIC,   REPEATED, UENUM,    sensor_types,      4)
#define wippersnapper_ds18x20_Ds18x20Add_CALLBACK NULL
#define wippersnapper_ds18x20_Ds18x20Add_DEFAULT NULL

#define wippersnapper_ds18x20_Ds18x20Added_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, BOOL,     is_initialized,    1) \
X(a, STATIC,   SINGULAR, STRING,   onewire_pin,       2)
#define wippersnapper_ds18x20_Ds18x20Added_CALLBACK NULL
#define wippersnapper_ds18x20_Ds18x20Added_DEFAULT NULL

#define wippersnapper_ds18x20_Ds18x20Remove_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   onewire_pin,       1)
#define wippersnapper_ds18x20_Ds18x20Remove_CALLBACK NULL
#define wippersnapper_ds18x20_Ds18x20Remove_DEFAULT NULL

#define wippersnapper_ds18x20_Ds18x20Event_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   onewire_pin,       1) \
X(a, STATIC,   REPEATED, MESSAGE,  sensor_events,     2)
#define wippersnapper_ds18x20_Ds18x20Event_CALLBACK NULL
#define wippersnapper_ds18x20_Ds18x20Event_DEFAULT NULL
#define wippersnapper_ds18x20_Ds18x20Event_sensor_events_MSGTYPE wippersnapper_sensor_SensorEvent

extern const pb_msgdesc_t wippersnapper_ds18x20_Ds18x20Add_msg;
extern const pb_msgdesc_t wippersnapper_ds18x20_Ds18x20Added_msg;
extern const pb_msgdesc_t wippersnapper_ds18x20_Ds18x20Remove_msg;
extern const pb_msgdesc_t wippersnapper_ds18x20_Ds18x20Event_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_ds18x20_Ds18x20Add_fields &wippersnapper_ds18x20_Ds18x20Add_msg
#define wippersnapper_ds18x20_Ds18x20Added_fields &wippersnapper_ds18x20_Ds18x20Added_msg
#define wippersnapper_ds18x20_Ds18x20Remove_fields &wippersnapper_ds18x20_Ds18x20Remove_msg
#define wippersnapper_ds18x20_Ds18x20Event_fields &wippersnapper_ds18x20_Ds18x20Event_msg

/* Maximum encoded size of messages (where known) */
#define WIPPERSNAPPER_DS18X20_DS18X20_PB_H_MAX_SIZE wippersnapper_ds18x20_Ds18x20Add_size
#define wippersnapper_ds18x20_Ds18x20Add_size    26
#define wippersnapper_ds18x20_Ds18x20Added_size  8
#define wippersnapper_ds18x20_Ds18x20Remove_size 6
#if defined(wippersnapper_sensor_SensorEvent_size)
#define wippersnapper_ds18x20_Ds18x20Event_size  (18 + 2*wippersnapper_sensor_SensorEvent_size)
#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
