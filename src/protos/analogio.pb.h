/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 at Wed Aug 21 15:48:44 2024. */

#ifndef PB_WIPPERSNAPPER_ANALOGIO_ANALOGIO_PB_H_INCLUDED
#define PB_WIPPERSNAPPER_ANALOGIO_ANALOGIO_PB_H_INCLUDED
#include <pb.h>
#include "sensor.pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
/* *
 AnalogIOAdd adds an analog pin to the device. */
typedef struct _wippersnapper_analogio_AnalogIOAdd {
    pb_callback_t pin_name; /* * Name of the pin. */
    float period; /* * Time between reads, in seconds. */
    wippersnapper_sensor_SensorType read_mode; /* * Desired read mode for the pin. */
} wippersnapper_analogio_AnalogIOAdd;

/* *
 AnalogIORemove removes an analog pin from the device. */
typedef struct _wippersnapper_analogio_AnalogIORemove {
    pb_callback_t pin_name; /* * Name of the pin. */
} wippersnapper_analogio_AnalogIORemove;

/* *
 AnalogIOEvent is contains a value, sent when an analog pin is read. */
typedef struct _wippersnapper_analogio_AnalogIOEvent {
    pb_callback_t pin_name; /* * Name of the pin. */
    bool has_sensor_event;
    wippersnapper_sensor_SensorEvent sensor_event; /* * Reading(s) from an analog pin. */
} wippersnapper_analogio_AnalogIOEvent;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define wippersnapper_analogio_AnalogIOAdd_init_default {{{NULL}, NULL}, 0, _wippersnapper_sensor_SensorType_MIN}
#define wippersnapper_analogio_AnalogIORemove_init_default {{{NULL}, NULL}}
#define wippersnapper_analogio_AnalogIOEvent_init_default {{{NULL}, NULL}, false, wippersnapper_sensor_SensorEvent_init_default}
#define wippersnapper_analogio_AnalogIOAdd_init_zero {{{NULL}, NULL}, 0, _wippersnapper_sensor_SensorType_MIN}
#define wippersnapper_analogio_AnalogIORemove_init_zero {{{NULL}, NULL}}
#define wippersnapper_analogio_AnalogIOEvent_init_zero {{{NULL}, NULL}, false, wippersnapper_sensor_SensorEvent_init_zero}

/* Field tags (for use in manual encoding/decoding) */
#define wippersnapper_analogio_AnalogIOAdd_pin_name_tag 1
#define wippersnapper_analogio_AnalogIOAdd_period_tag 2
#define wippersnapper_analogio_AnalogIOAdd_read_mode_tag 3
#define wippersnapper_analogio_AnalogIORemove_pin_name_tag 1
#define wippersnapper_analogio_AnalogIOEvent_pin_name_tag 1
#define wippersnapper_analogio_AnalogIOEvent_sensor_event_tag 2

/* Struct field encoding specification for nanopb */
#define wippersnapper_analogio_AnalogIOAdd_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   pin_name,          1) \
X(a, STATIC,   SINGULAR, FLOAT,    period,            2) \
X(a, STATIC,   SINGULAR, UENUM,    read_mode,         3)
#define wippersnapper_analogio_AnalogIOAdd_CALLBACK pb_default_field_callback
#define wippersnapper_analogio_AnalogIOAdd_DEFAULT NULL

#define wippersnapper_analogio_AnalogIORemove_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   pin_name,          1)
#define wippersnapper_analogio_AnalogIORemove_CALLBACK pb_default_field_callback
#define wippersnapper_analogio_AnalogIORemove_DEFAULT NULL

#define wippersnapper_analogio_AnalogIOEvent_FIELDLIST(X, a) \
X(a, CALLBACK, SINGULAR, STRING,   pin_name,          1) \
X(a, STATIC,   OPTIONAL, MESSAGE,  sensor_event,      2)
#define wippersnapper_analogio_AnalogIOEvent_CALLBACK pb_default_field_callback
#define wippersnapper_analogio_AnalogIOEvent_DEFAULT NULL
#define wippersnapper_analogio_AnalogIOEvent_sensor_event_MSGTYPE wippersnapper_sensor_SensorEvent

extern const pb_msgdesc_t wippersnapper_analogio_AnalogIOAdd_msg;
extern const pb_msgdesc_t wippersnapper_analogio_AnalogIORemove_msg;
extern const pb_msgdesc_t wippersnapper_analogio_AnalogIOEvent_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define wippersnapper_analogio_AnalogIOAdd_fields &wippersnapper_analogio_AnalogIOAdd_msg
#define wippersnapper_analogio_AnalogIORemove_fields &wippersnapper_analogio_AnalogIORemove_msg
#define wippersnapper_analogio_AnalogIOEvent_fields &wippersnapper_analogio_AnalogIOEvent_msg

/* Maximum encoded size of messages (where known) */
/* wippersnapper_analogio_AnalogIOAdd_size depends on runtime parameters */
/* wippersnapper_analogio_AnalogIORemove_size depends on runtime parameters */
/* wippersnapper_analogio_AnalogIOEvent_size depends on runtime parameters */

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
